using System;
using System.ComponentModel;
using System.Drawing;
using System.IO;
using System.Linq;
using System.Net;
using System.Threading.Tasks;
using System.Windows.Forms;
using CheatSquadAPI;
using ClubDarkAPI;
using EasyExploits;
using Microsoft.Win32;
using WeAreDevs_API;
using ShadowCheats;

namespace Sample
{
	public partial class Form1 : Form
	{
		public Form1()
		{
			this.InitializeComponent();
		}

		private void Button1_Click(object sender, EventArgs e)
		{
			HtmlDocument document = webBrowser1.Document;
			string scriptName = "GetText";
			object[] args = new string[0];
			object obj = document.InvokeScript(scriptName, args);
			string script = obj.ToString();
			if (radioButton1.Checked)
			{
				wrd.SendLuaScript(script);
				return;
			}
			if (radioButton2.Checked)
			{
				api.ExecuteScript(script);
				return;
			}
			else if (radioButton3.Checked)
			{
				clubdark.ExecuteScript(script);
				return;
			}
			else if (radioButton4.Checked)
			{
				module.Execute(script);
				return;
			}
			else if(radioButton5.Checked)
            {
				shadow.ExecuteFromInterpreter(script);
				return;
            }
		}

		private void Button2_Click(object sender, EventArgs e)
		{
			if (radioButton1.Checked)
			{
				wrd.LaunchExploit();
				return;
			}
			if (radioButton2.Checked)
			{
				api.LaunchExploit();
				return;
			}
			if (radioButton3.Checked)
			{
				clubdark.LaunchExploit();
				return;
			}
			if (radioButton4.Checked)
			{
				this.module.Attach();
				return;
			}
            if (radioButton5.Checked) 
			{
				shadow.LoadIntoRoblox();
				return;
			}
		}

		private void btnExit_Click(object sender, EventArgs e)
		{
			Application.Exit();
		}

		private void btnMinimize_Click(object sender, EventArgs e)
		{
			base.WindowState = FormWindowState.Minimized;
		}

		private void Form1_MouseMove(object sender, MouseEventArgs e)
		{
			if (this.flag)
			{
				base.Location = Cursor.Position;
			}
		}

		private void Form1_MouseDown(object sender, MouseEventArgs e)
		{
			this.flag = true;
		}

		private void Form1_MouseUp(object sender, MouseEventArgs e)
		{
			this.flag = false;
		}
		private void panel2_MouseMove(object sender, MouseEventArgs e)
		{
			if (this.flag)
			{
				base.Location = Cursor.Position;
			}
		}

		private void panel2_MouseDown(object sender, MouseEventArgs e)
		{
			this.flag = true;
		}
		private void panel2_MouseUp(object sender, MouseEventArgs e)
		{
			this.flag = false;
		}

		private CheatSquadAPI.Module module = new CheatSquadAPI.Module();

		private EasyExploits.Module api = new EasyExploits.Module();

		private WeAreDevs_API.ExploitAPI wrd = new WeAreDevs_API.ExploitAPI();

		private ClubDarkAPI.ExploitAPI clubdark = new ClubDarkAPI.ExploitAPI();

		private ShadowCheats.Api shadow = new ShadowCheats.Api();

		private bool flag;

        private void btnClear_Click(object sender, EventArgs e)
        {
			webBrowser1.Document.InvokeScript("SetText", new object[]
			{
				""
			});
        }

        private void btnLoad_Click(object sender, EventArgs e)
        {
			if (Functions.openfiledialog.ShowDialog() == DialogResult.OK)
			{
				try
				{

                    string MainText = File.ReadAllText(Functions.openfiledialog.FileName);
					webBrowser1.Document.InvokeScript("SetText", new object[]
					{
						  MainText
					});

				}
				catch (Exception ex)
				{
					MessageBox.Show("Error: Could not read file from disk. Original error: " + ex.Message);
				}
			}
		}

		WebClient wc = new WebClient();
		private string defPath = Application.StartupPath + "//Monaco//";

		private void addIntel(string label, string kind, string detail, string insertText)
		{
			string text = "\"" + label + "\"";
			string text2 = "\"" + kind + "\"";
			string text3 = "\"" + detail + "\"";
			string text4 = "\"" + insertText + "\"";
			webBrowser1.Document.InvokeScript("AddIntellisense", new object[]
			{
				label,
				kind,
				detail,
				insertText
			});
		}

		private void addGlobalF()
		{
			string[] array = File.ReadAllLines(this.defPath + "//globalf.txt");
			foreach (string text in array)
			{
				bool flag = text.Contains(':');
				if (flag)
				{
					this.addIntel(text, "Function", text, text.Substring(1));
				}
				else
				{
					this.addIntel(text, "Function", text, text);
				}
			}
		}

		private void addGlobalV()
		{
			foreach (string text in File.ReadLines(this.defPath + "//globalv.txt"))
			{
				this.addIntel(text, "Variable", text, text);
			}
		}

		private void addGlobalNS()
		{
			foreach (string text in File.ReadLines(this.defPath + "//globalns.txt"))
			{
				this.addIntel(text, "Class", text, text);
			}
		}

		private void addMath()
		{
			foreach (string text in File.ReadLines(this.defPath + "//classfunc.txt"))
			{
				this.addIntel(text, "Method", text, text);
			}
		}

		private void addBase()
		{
			foreach (string text in File.ReadLines(this.defPath + "//base.txt"))
			{
				this.addIntel(text, "Keyword", text, text);
			}
		}

		private async void Form1_Load(object sender, EventArgs e)
		{
			WebClient wc = new WebClient();
			wc.Proxy = null;
			try
			{
				RegistryKey registryKey = Registry.CurrentUser.OpenSubKey("SOFTWARE\\Microsoft\\Internet Explorer\\Main\\FeatureControl\\FEATURE_BROWSER_EMULATION", true);
				string friendlyName = AppDomain.CurrentDomain.FriendlyName;
				bool flag2 = registryKey.GetValue(friendlyName) == null;
				if (flag2)
				{
					registryKey.SetValue(friendlyName, 11001, RegistryValueKind.DWord);
				}
				registryKey = null;
				friendlyName = null;
			}
			catch (Exception)
			{
			}
			webBrowser1.Url = new Uri(string.Format("file:///{0}/Monaco/Monaco.html", Directory.GetCurrentDirectory()));
			await Task.Delay(500);
			webBrowser1.Document.InvokeScript("SetTheme", new string[]
			{
				   "Dark" 
                   /*
                    There are 2 Themes Dark and Light
                   */
            });
			addBase();
			addMath();
			addGlobalNS();
			addGlobalV();
			addGlobalF();
			webBrowser1.Document.InvokeScript("SetText", new object[]
			{
				 "-- LIDUA MULTIEXPLOIT 1.0 contact: coojin@protonmail.com--"
			});
		}
	}
}
